//this file is generated by program(drogon_ctl) automatically,don't modify it!
#include "GameView.h"
#include <drogon/utils/OStringStream.h>
#include <string>
#include <map>
#include <vector>
#include <set>
#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <algorithm>
#include <list>
#include <deque>
#include <queue>
using namespace drogon;
std::string RefreshView::genText(const DrTemplateData& RefreshView_view_data)
{
	drogon::OStringStream RefreshView_tmp_stream;
	std::string layoutName{""};
	RefreshView_tmp_stream << "<!DOCTYPE html>\n";
RefreshView_tmp_stream<<"\n";
	RefreshView_tmp_stream << "<html>\n";
auto field=RefreshView_view_data.get<std::vector<std::string>>("field");
	RefreshView_tmp_stream << "<head>\n";
	RefreshView_tmp_stream << "    <meta charset=\"UTF-32\">\n";
	RefreshView_tmp_stream << "    <title>Life Game</title>\n";
	RefreshView_tmp_stream << "    <style>\n";
	RefreshView_tmp_stream << "        p {\n";
	RefreshView_tmp_stream << "            line-height: 0;\n";
	RefreshView_tmp_stream << "            letter-spacing: 0.7em;\n";
	RefreshView_tmp_stream << "            position: relative;\n";
	RefreshView_tmp_stream << "            text-align: center;\n";
	RefreshView_tmp_stream << "            font-family: monospace;\n";
	RefreshView_tmp_stream << "            font-size: 22px;\n";
	RefreshView_tmp_stream << "        }\n";
	RefreshView_tmp_stream << "    </style>\n";
	RefreshView_tmp_stream << "</head>\n";
	RefreshView_tmp_stream << "<body>\n";
	RefreshView_tmp_stream << "<div id=\"content\">\n";
	RefreshView_tmp_stream << "    ";
 for(auto& str : field){
	RefreshView_tmp_stream << "    <p>";
 RefreshView_tmp_stream << str; 
	RefreshView_tmp_stream << "</p>\n";
	RefreshView_tmp_stream << "    ";
}
	RefreshView_tmp_stream << "</div>\n";
	RefreshView_tmp_stream << "<script>\n";
	RefreshView_tmp_stream << "    function loadDoc() {\n";
	RefreshView_tmp_stream << "        var xhttp = new XMLHttpRequest();\n";
	RefreshView_tmp_stream << "        xhttp.onreadystatechange = function() {\n";
	RefreshView_tmp_stream << "            if (this.readyState == 4 && this.status == 200) {\n";
	RefreshView_tmp_stream << "                document.getElementById(\"content\").innerHTML =\n";
	RefreshView_tmp_stream << "                    this.responseXML.getElementById(\"content\").innerHTML;\n";
	RefreshView_tmp_stream << "            }\n";
	RefreshView_tmp_stream << "        };\n";
	RefreshView_tmp_stream << "        xhttp.open(\"GET\", \"/refresh\", true);\n";
	RefreshView_tmp_stream << "        xhttp.send();\n";
RefreshView_tmp_stream<<"\n";
	RefreshView_tmp_stream << "        autoReload();\n";
	RefreshView_tmp_stream << "    }\n";
RefreshView_tmp_stream<<"\n";
	RefreshView_tmp_stream << "    function autoReload()\n";
	RefreshView_tmp_stream << "    {\n";
	RefreshView_tmp_stream << "        setTimeout(loadDoc, 500);\n";
	RefreshView_tmp_stream << "    }\n";
RefreshView_tmp_stream<<"\n";
	RefreshView_tmp_stream << "    autoReload();\n";
	RefreshView_tmp_stream << "</script>\n";
	RefreshView_tmp_stream << "<button type=\"button\">Save</button>\n";
	RefreshView_tmp_stream << "</body>\n";
	RefreshView_tmp_stream << "</html>\n";
if(layoutName.empty())
{
std::string ret{std::move(RefreshView_tmp_stream.str())};
return ret;
}else
{
auto templ = DrTemplateBase::newTemplate(layoutName);
if(!templ) return "";
HttpViewData data = RefreshView_view_data;
auto str = std::move(RefreshView_tmp_stream.str());
if(!str.empty() && str[str.length()-1] == '\n') str.resize(str.length()-1);
data[""] = std::move(str);
return templ->genText(data);
}
}
